import{g as C,t as c,p as S,i as s,a as w,b as r,d as x,c as E,s as N,f as o}from"./index.19546f6b.js";import{g as i}from"./FlexContainer.b5445796.js";const A=c('<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="m12 15 .707.707-.707.707-.707-.707L12 15Zm6.707-5.293-6 6-1.414-1.414 6-6 1.414 1.414Zm-7.414 6-6-6 1.414-1.414 6 6-1.414 1.414Z" fill="var(--svg-color)"></path></svg>'),D=(t={})=>(()=>{const a=A.cloneNode(!0);return C(a,t,!0,!0),a})(),L=c("<div></div>"),Z=c('<div><div><select placeholder=" " required><option value="" disabled selected></option></select><label></label></div></div>');function P(t){let a=S(t,i.selectContainer),b=t.hint!=null?(()=>{const n=L.cloneNode(!0);return s(n,()=>t.hint),w(()=>r(n,`${i.selectHint} text`)),n})():"";if(typeof t.id!="string")throw new Error("<Select> element must always have an ID!");if(typeof t.label!="string")throw new Error("<Select> element must always have a label!");return(()=>{const n=Z.cloneNode(!0),v=n.firstChild,l=v.firstChild;l.firstChild;const d=l.nextSibling;return x(l,"change",t.onChange),s(l,()=>t.children,null),s(v,E(D,{get class(){return i.selectFieldArrow}}),d),s(d,()=>t.label),s(n,b,null),w(e=>{const u=a.class,y=a.style,f=i.selectDataContainer,$=t.id,_=t.autocomplete?t.autocomplete:"off",m=i.selectField,h=i.selectLabel,g=t.id;return u!==e._v$&&r(n,e._v$=u),e._v$2=N(n,y,e._v$2),f!==e._v$3&&r(v,e._v$3=f),$!==e._v$4&&o(l,"id",e._v$4=$),_!==e._v$5&&o(l,"autocomplete",e._v$5=_),m!==e._v$6&&r(l,e._v$6=m),h!==e._v$7&&r(d,e._v$7=h),g!==e._v$8&&o(d,"for",e._v$8=g),e},{_v$:void 0,_v$2:void 0,_v$3:void 0,_v$4:void 0,_v$5:void 0,_v$6:void 0,_v$7:void 0,_v$8:void 0}),n})()}export{P as S};
